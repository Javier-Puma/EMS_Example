Main

import { StrictMode } from 'react'
import { createRoot } from 'react-dom/client'
import './index.css'
import 'bootstrap/dist/css/bootstrap.min.css'
import App from './App.jsx'

createRoot(document.getElementById('root')).render(
  <StrictMode>
    <App/>
  </StrictMode>,
)

App

import './App.css'
import EmployeeComponent from './components/Employeecomponent'
import FooterCompoment from './components/footerCompoment'
import HeaderComponent from './components/HeaderComponent'
import ListEmployeeComponent from './components/ListEmployeeComponent'
import { BrowserRouter, Routes, Route } from 'react-router-dom'

function App() {
  return (
    <>
      <BrowserRouter>
        <HeaderComponent/>
        <Routes>
          {/*<Route path='/' element={<ListEmployeeComponent />}></Route>*/}
          <Route path='/employees' element={<ListEmployeeComponent />}></Route>
          <Route path='/add' element={ <EmployeeComponent/>}></Route>
          <Route path='/edit/:id' element={ <EmployeeComponent/> }></Route>
        </Routes>
        <FooterCompoment/>
      </BrowserRouter>
    </>
  )
}

export default App

components

import React, { useEffect, useState } from 'react'
import { createEmployee, getEmployee, updateEmployee } from '../services/EmployeeService'
import { useNavigate,useParams } from 'react-router-dom'

const EmployeeComponent = () => {
  const [firstName, setFirstName]=useState('')
  const [lastName, setLastName]=useState('')
  const [email,setEmail]=useState('')
  const {id}=useParams();
  const [errors, setErrors]=useState({
    firstName:'',
    lastName:'',
    email:''
  })

  const navigator = useNavigate();

  useEffect(()=>{
    if(id){
        getEmployee(id).then((response)=>{
            setFirstName(response.data.firstName);
            setLastName(response.data.lastName);
            setEmail(response.data.email);
        }).catch(error=>{
            console.error(error);
        })
    }
  },[id])
  
  function saveOrUpdateEmployee(e){
    e.preventDefault();
    if(validateForm()){
        const employee={firstName,lastName,email}
        console.log(employee);
        if(id){
            updateEmployee(id,employee).then((response)=>{
                console.log(response.data);
                navigator('/employees');
            }).catch(error=>{
                console.error(error);
            })
        }else{
            createEmployee(employee).then((response)=>{
            console.log(response.data);
            navigator('/employees');
            }).catch(error=>{
                console.error(error);
            })
        }
    }
  }
  function validateForm(){
    let valid=true;
    const errorrsCopy={... errors}
    if(firstName.trim()){errorrsCopy.firstName='';
    }else{errorrsCopy.firstName='First Name is required';valid=false;}
    if(lastName.trim()){errorrsCopy.lastName='';
    }else{errorrsCopy.lastName='Last Name is required';valid=false;}
    if(email.trim()){errorrsCopy.email='';
    }else{errorrsCopy.email='Email is required';valid=false;}
    setErrors(errorrsCopy);
    return valid;
  }
  function pageTitle(){
    if(id){
        return <h2 className='text-center'>Update Employee</h2>
    }
    else{
        return <h2 className='text-center'>Add Employee</h2>
    }
  }
    return (
    <div className='container'>
        <br/><br/>
        <div className='row'>
            <div className='card col-md-6 offset-md-3 offset-md-3'>
                {
                    pageTitle()
                }
                <div className='card-body'>
                    <form>
                        <div className='form-group mb-2'>
                            <label className='form-label'>Employee First Name</label>
                            <input
                            type="text"
                            placeholder='Emter Employee First Name:'
                            name='firstName'
                            value={firstName}
                            className={`form-control ${ errors.firstName ? 'is-invalid':''}`}
                            onChange={(e) => setFirstName(e.target.value)}>
                            </input>
                            {errors.firstName && <div className='invalid-feedback'>{errors.firstName}</div>}
                        </div>
                        <div className='form-group mb-2'>
                            <label className='form-label'>Employee Last Name</label>
                            <input
                            type="text"
                            placeholder='Emter Employee Last Name:'
                            name='lastName'
                            value={lastName}
                            className={`form-control ${ errors.lastName ? 'is-invalid':''}`}
                            onChange={(e) => setLastName(e.target.value)}>
                            </input>
                            {errors.lastName && <div className='invalid-feedback'>{errors.lastName}</div>}
                        </div>
                        <div className='form-group mb-2'>
                            <label className='form-label'>Employee Email</label>
                            <input
                            type="email"
                            placeholder='Emter Employee Email:'
                            name='email'
                            value={email}
                            className={`form-control ${ errors.email ? 'is-invalid':''}`}
                            onChange={(e) => setEmail(e.target.value)}>
                            </input>
                            {errors.email && <div className='invalid-feedback'>{errors.email}</div>}
                        </div>
                        <button className='btn btn-success' onClick={saveOrUpdateEmployee}>Submit</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
  )
}

export default EmployeeComponent

import React from 'react'

const FooterCompoment = () => {
  return (
    <div>
        <footer className='footer'>
            <span>All rights reserved 2025 by Sogni_Appesi</span>

        </footer>
    </div>
  )
}

export default FooterCompoment

import React from 'react'

const HeaderComponent = () => {
  return (
    <div>
        <header>
            <nav className='navbar navbar-dark bg-dark'>
                <a className='navbar-brand' href="http://localhost:3000/employees">Employee Management System</a>
            </nav>
        </header>
    </div>
  )
}

export default HeaderComponent

import React,{useEffect, useState} from 'react'
import { deleteEmployee, listEmployees } from '../services/EmployeeService'
import { useNavigate } from 'react-router-dom'

const ListEmployeeComponent = () => {
    const [employees, setEmployees] = useState([])
    const navigator=useNavigate();
    useEffect(()=>{
        getAllEmployees();
    }, [])
    function getAllEmployees(){
        listEmployees().then((response)=>{
            setEmployees(response.data);
        }).catch(error=>{
            console.error(error);
        })
    }
    function addNewEmployee(){
        navigator('/add')
    }
    function updateEmployee(id){
        navigator(`/edit/${id}`)
    }
    function removeEmployee(id){
        console.log(id);
        deleteEmployee(id).then((response)=>{
            console.log(response);
            getAllEmployees();
        }).catch(error=>{
            console.error(error)})
    } 
  return (
    <div className='container'>
        <h2 className='text-center'>List of Employees</h2>
        <button className='btn btn-primary' onClick={addNewEmployee}>Add Employee</button>
        <table className='table table-striped table-bordered'>
            <thead>
                <tr>
                    <th>Employee Id</th>
                    <th>Employee First Name</th>
                    <th>Employee Last Name</th>
                    <th>Employee Email</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                {
                    employees.map((employee) =>
                        <tr key={employee.id}>
                            <td>{employee.id}</td>
                            <td>{employee.firstName}</td>
                            <td>{employee.lastName}</td>
                            <td>{employee.email}</td>
                            <td>
                                <button className='btn btn-info' onClick={()=>updateEmployee(employee.id)}>Update</button>
                                <button className='btn btn-danger' onClick={()=>removeEmployee(employee.id)}>Delete</button>
                            </td>
                        </tr>
                    )
                }
            </tbody>
        </table>
    </div>
  )
}

export default ListEmployeeComponent

services

import axios, { Axios } from "axios";
const REST_API_BASE_URL='http://localhost:8080/api/employees';
export const listEmployees = () => axios.get(REST_API_BASE_URL);
export const createEmployee = (employee)=>axios.post(REST_API_BASE_URL, employee);
export const getEmployee = (employeId)=>axios.get(REST_API_BASE_URL+'/'+employeId);
export const updateEmployee = (employeId, employee)=>axios.put(REST_API_BASE_URL+'/'+employeId,employee);
export const deleteEmployee = (employeId)=>axios.delete(REST_API_BASE_URL+'/'+employeId);